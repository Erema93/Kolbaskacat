import logging
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler, ConversationHandler

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ ID —á–∞—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_BOT_TOKEN = os.environ.get('8012532063:AAGNNZ7XkdLQU_-sMR2SG9tLb1ZICVLOSWo')
YOUR_PERSONAL_CHAT_ID = os.environ.get('572255263')
# --- –ö–û–ù–ï–¶ –ù–ê–°–¢–†–û–ï–ö ---

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
CATEGORY, PHONE, ADDRESS = range(3) # –î–æ–±–∞–≤–∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ADDRESS

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥
CATEGORIES = {
    "heat_meter_verify": "–ü–æ–≤—ñ—Ä–∫–∞ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –æ–ø–∞–ª–µ–Ω–Ω—è",
    "battery_replace": "–ó–∞–º—ñ–Ω–∞ –±–∞—Ç–∞—Ä–µ–π–∫–∏",
    "water_meter_replace": "–ó–∞–º—ñ–Ω–∞ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –≤–æ–¥–∏",
    "water_meter_verify": "–ü–æ–≤—ñ—Ä–∫–∞ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –≤–æ–¥–∏",
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é."""
    keyboard = [
        [InlineKeyboardButton(text, callback_data=key)] for key, text in CATEGORIES.items()
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    # –£–±–∏—Ä–∞–µ–º –ª—é–±—É—é –ø—Ä–µ–¥—ã–¥—É—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    await update.message.reply_text(
        '–í—ñ—Ç–∞—é! –Ø –¥–æ–ø–æ–º–æ–∂—É –≤–∞–º –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞—è–≤–∫—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É:',
        reply_markup=reply_markup
    )
    # –û—á–∏—â–∞–µ–º user_data –Ω–∞ —Å–ª—É—á–∞–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –¥–∏–∞–ª–æ–≥–∞
    context.user_data.clear()
    return CATEGORY # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
async def category_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞."""
    query = update.callback_query
    await query.answer()

    category_key = query.data
    category_text = CATEGORIES.get(category_key, "–ù–µ–≤—ñ–¥–æ–º–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è")
    context.user_data['category'] = category_text # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é

    await query.edit_message_text(text=f"–í–∏ –æ–±—Ä–∞–ª–∏: {category_text}")

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    phone_button = KeyboardButton(text="üì± –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact=True)
    reply_markup = ReplyKeyboardMarkup([[phone_button]], one_time_keyboard=True, resize_keyboard=True)

    await context.bot.send_message(
        chat_id=query.message.chat_id,
        text='–¢–µ–ø–µ—Ä, –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –∑–≤\'—è–∑–∫—É, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ:',
        reply_markup=reply_markup
    )
    return PHONE # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ (—Ç–µ–ª–µ—Ñ–æ–Ω–∞)
async def phone_received(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∞–¥—Ä–µ—Å."""
    contact = update.message.contact
    phone_number = contact.phone_number
    context.user_data['phone'] = phone_number # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞

    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∑–∞–ø—Ä–æ—Å–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –∞–¥—Ä–µ—Å
    await update.message.reply_text(
        '–î—è–∫—É—é! –¢–µ–ø–µ—Ä, –±—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –∞–¥—Ä–µ—Å—É (–º—ñ—Å—Ç–æ, –≤—É–ª–∏—Ü—è, –±—É–¥–∏–Ω–æ–∫, –∫–≤–∞—Ä—Ç–∏—Ä–∞):',
        reply_markup=ReplyKeyboardRemove() # –£–±–∏—Ä–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–º–µ—Ä"
    )
    return ADDRESS # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
async def address_received(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫—É –≤–ª–∞–¥–µ–ª—å—Ü—É."""
    address = update.message.text
    context.user_data['address'] = address # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å

    user = update.message.from_user
    user_info = f"@{user.username}" if user.username else f"{user.first_name} (ID: {user.id})"

    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    category = context.user_data.get('category', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')
    phone_number = context.user_data.get('phone', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')
    address_text = context.user_data.get('address', '–ù–µ –≤–∫–∞–∑–∞–Ω–æ')

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–ª–∞–¥–µ–ª—å—Ü—É
    application_text = (
        f"üîî –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞! üîî\n\n"
        f"üë§ –í—ñ–¥: {user_info}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: +{phone_number}\n"
        f"üè† –ê–¥—Ä–µ—Å–∞: {address_text}\n" # –î–æ–±–∞–≤–∏–ª–∏ –∞–¥—Ä–µ—Å
        f"üîß –ü–æ—Å–ª—É–≥–∞: {category}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –Ω–∞ –õ–ò–ß–ù–´–ô Chat ID –≤–ª–∞–¥–µ–ª—å—Ü–∞
    try:
        if not YOUR_PERSONAL_CHAT_ID:
             logger.error("YOUR_PERSONAL_CHAT_ID –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
             raise ValueError("Chat ID –≤–ª–∞—Å–Ω–∏–∫–∞ –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ.")

        await context.bot.send_message(
            chat_id=YOUR_PERSONAL_CHAT_ID,
            text=application_text
        )
        logger.info(f"–ó–∞—è–≤–∫–∞ –≤—ñ–¥ {user_info} –ø–æ –ø–æ—Å–ª—É–∑—ñ '{category}' (–ê–¥—Ä–µ—Å–∞: {address_text}) –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞.")
        # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞
        await update.message.reply_text(
            '‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–π–Ω—è—Ç–∞. –ú–∏ –∑–≤\'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.',
            reply_markup=ReplyKeyboardRemove() # –£–±–∏—Ä–∞–µ–º –ª—é–±—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        )
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏: {e}")
        await update.message.reply_text(
            '‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –∑–∞—è–≤–∫–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.',
            reply_markup=ReplyKeyboardRemove()
        )

    # –û—á–∏—â–∞–µ–º user_data
    context.user_data.clear()
    return ConversationHandler.END # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–∏–∞–ª–æ–≥–∞
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥."""
    await update.message.reply_text(
        '–î—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.',
        reply_markup=ReplyKeyboardRemove() # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )
    context.user_data.clear()
    return ConversationHandler.END

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞ –∏ ID –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    if not TELEGRAM_BOT_TOKEN:
        logger.critical("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ TELEGRAM_BOT_TOKEN! –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–º—ñ–Ω–Ω—É –æ—Ç–æ—á–µ–Ω–Ω—è.")
        return
    if not YOUR_PERSONAL_CHAT_ID:
        logger.critical("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ YOUR_PERSONAL_CHAT_ID! –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–º—ñ–Ω–Ω—É –æ—Ç–æ—á–µ–Ω–Ω—è.")
        # –ú–æ–∂–Ω–æ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –±–æ—Ç–∞, –∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫—É,
        # –Ω–æ –∑–∞—è–≤–∫–∏ –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è. –†–µ—à–∏–ª –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏.
        return
    try:
        # –ü—Ä–æ–±—É–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å ID –≤ —á–∏—Å–ª–æ –¥–ª—è —Ä–∞–Ω–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        int(YOUR_PERSONAL_CHAT_ID)
    except ValueError:
        logger.critical(f"YOUR_PERSONAL_CHAT_ID ('{YOUR_PERSONAL_CHAT_ID}') –Ω–µ —î –¥—ñ–π—Å–Ω–∏–º —á–∏—Å–ª–æ–≤–∏–º ID —á–∞—Ç—É!")
        return


    # –°–æ–∑–¥–∞–µ–º Application
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()

    # –°–æ–∑–¥–∞–µ–º ConversationHandler —Å –Ω–æ–≤—ã–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            CATEGORY: [CallbackQueryHandler(category_choice)],
            PHONE: [MessageHandler(filters.CONTACT, phone_received)],
             # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ ADDRESS
            ADDRESS: [MessageHandler(filters.TEXT & ~filters.COMMAND, address_received)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    application.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (–≤
