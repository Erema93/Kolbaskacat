import os
import telebot
import schedule
import time
import threading
from flask import Flask

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TOKEN = "7149701343:AAHj3tT3KFlN5YXUQdTxSbNkDcGPyt3vjjY"
CHAT_ID = "7149701343"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π chat_id (—á–∏—Å–ª–æ–≤–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä: -123456789)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    try:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! üê± –Ø –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ —Å–∫–∞–∑–∫–∏ –ø—Ä–æ –∫–æ—Ç–æ–≤-–∫–æ–ª–±–∞—Å–æ–∫ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 22:00!")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∫–∞–∑–æ–∫
def send_tales():
    print("–û—Ç–ø—Ä–∞–≤–ª—è—é —Å–∫–∞–∑–∫–∏...")
    try:
        tale1 = "üê± –ò—Å—Ç–æ—Ä–∏—è 1: –ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –∫–æ—Ç–æ–≤-–∫–æ–ª–±–∞—Å–æ–∫..."
        tale2 = "üê± –ò—Å—Ç–æ—Ä–∏—è 2: –°–ª–∞–¥–∫–∏–π –º–∏—Ä –∫–æ—Ç–æ–≤-–∫–æ–ª–±–∞—Å–æ–∫..."
        bot.send_message(CHAT_ID, tale1)
        time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        bot.send_message(CHAT_ID, tale2)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–∫–∞–∑–æ–∫: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
def run_scheduler():
    # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ 22:00 –∫–∞–∂–¥—ã–π –¥–µ–Ω—å (–≤–º–µ—Å—Ç–æ –∫–∞–∂–¥—ã—Ö 1 –º–∏–Ω—É—Ç)
    schedule.every().day.at("01:30").do(send_tales)
    
    while True:
        try:
            schedule.run_pending()
            time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ: {e}")
            time.sleep(60)  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ polling
def run_bot_polling():
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ polling: {e}")
        time.sleep(5)  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        run_bot_polling()  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫

# –ì–ª–∞–≤–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç Flask
@app.route('/')
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

if __name__ == "__main__":
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5000
    port = int(os.environ.get("PORT", 5000))
    
    print(f"Starting app on port {port}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
    bot_thread = threading.Thread(target=run_bot_polling, daemon=True)
    scheduler_thread = threading.Thread(target=run_scheduler, daemon=True)
    
    bot_thread.start()
    scheduler_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask
    app.run(host="0.0.0.0", port=port)





